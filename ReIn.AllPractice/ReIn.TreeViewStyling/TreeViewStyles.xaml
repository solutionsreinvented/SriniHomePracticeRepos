<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:theme="http://schemas.reinvented.com/ui/themes">

    <!--#region Brushes-->

    <SolidColorBrush x:Key="ListBorder" Color="#828790" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" />

    <!--#endregion-->

    <!--#region Geometry-->

    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z" />

    <!--#endregion-->

    <!--#region Control Template - Tree View-->

    <ControlTemplate x:Key="TreeViewTemplate" TargetType="{x:Type TreeView}">

        <!--#region Content Host-->

        <Border
            x:Name="Bd"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">

            <!--#region Scroll Viewer-->

            <ScrollViewer
                x:Name="_tv_scrollviewer_"
                Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                CanContentScroll="false"
                Focusable="false"
                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">

                <ItemsPresenter />

            </ScrollViewer>

            <!--#endregion-->

        </Border>

        <!--#endregion-->

        <!--#region Control Template Triggers-->

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            </Trigger>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
            </Trigger>
        </ControlTemplate.Triggers>

        <!--#endregion-->

    </ControlTemplate>

    <!--#endregion-->

    <!--#region Control Template - TreeView Item-->

    <ControlTemplate x:Key="TreeViewItemTemplate" TargetType="{x:Type TreeViewItem}">

        <!--#region TreeView Item Content Host-->

        <Grid>

            <!--#region Grid Definition-->

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="19" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <!--#endregion-->

            <!--#region Expand Collapse Toggle-->

            <ToggleButton
                x:Name="Expander"
                ClickMode="Press"
                IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{DynamicResource ExpandCollapseToggleStyle}" />

            <!--#endregion-->

            <!--#region Header Content Presenter-->

            <Border
                x:Name="Bd"
                Grid.Column="1"
                Grid.ColumnSpan="2"
                Width="{Binding Width, RelativeSource={RelativeSource Self}}"
                Padding="{TemplateBinding Padding}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="3"
                SnapsToDevicePixels="true">

                <ContentPresenter
                    x:Name="PART_Header"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    ContentSource="Header"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

            </Border>

            <!--#endregion-->

            <!--#region Items Host-->

            <ItemsPresenter
                x:Name="ItemsHost"
                Grid.Row="1"
                Grid.Column="1"
                Grid.ColumnSpan="2" />

            <!--#endregion-->

        </Grid>

        <!--#endregion-->

        <!--#region Control Template Triggers-->

        <ControlTemplate.Triggers>

            <!--#region Triggers-->

            <Trigger Property="IsExpanded" Value="false">
                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>

            <!--#endregion-->

            <!--#region MultiTriggers-->

            <MultiTrigger>

                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>

                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />

            </MultiTrigger>

            <!--#endregion-->

        </ControlTemplate.Triggers>

        <!--#endregion-->

    </ControlTemplate>

    <!--#endregion-->

    <!--#region Control Template - Expand Collapse Toggle-->

    <ControlTemplate x:Key="ExpandCollapseToggleTemplate" TargetType="{x:Type ToggleButton}">

        <!--#region Host-->

        <Border
            Width="16"
            Height="16"
            Padding="5,5,5,5"
            Background="Transparent">

            <!--#region Geometry Path-->

            <Path
                x:Name="ExpandPath"
                Data="{DynamicResource TreeArrow}"
                Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
                Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                <Path.RenderTransform>
                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                </Path.RenderTransform>
            </Path>

            <!--#endregion-->

        </Border>

        <!--#endregion-->

        <!--#region ControlTemplate Triggers-->

        <ControlTemplate.Triggers>

            <!--#region Triggers-->

            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="ExpandPath" Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
                <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
                <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
            </Trigger>

            <!--#endregion-->

            <!--#region MultiTriggers-->

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
                <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
            </MultiTrigger>

            <!--#endregion-->

        </ControlTemplate.Triggers>

        <!--#endregion-->

    </ControlTemplate>

    <!--#endregion-->

    <!--#region TreeView Style-->

    <Style x:Key="TreeViewStyle" TargetType="{x:Type TreeView}">

        <!--<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />-->
        <Setter Property="Background" Value="{theme:ThemeResource ResourceKey=StaticBackgroundBrush}" />
        <!--<Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />-->
        <Setter Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=StaticBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />-->
        <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=StaticForegroundBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="Template" Value="{DynamicResource TreeViewTemplate}" />

        <!--#region Style Triggers-->

        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>

        <!--#endregion-->

    </Style>

    <!--#endregion-->

    <!--#region TreeView Item Focus Visual-->

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Expand Collapse Toggle Style-->

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template" Value="{DynamicResource ExpandCollapseToggleTemplate}" />
    </Style>

    <!--#endregion-->

    <!--#region TreeView Item Style-->

    <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">

        <Setter Property="Background" Value="{theme:ThemeResource ResourceKey=StaticBackgroundBrush}" />
        <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=StaticForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template" Value="{DynamicResource TreeViewItemTemplate}" />

        <!--#region Style Triggers-->

        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>

        <!--#endregion-->

    </Style>

    <!--#endregion-->

    <!--#region TreeView Main Item Style-->

    <Style
        x:Key="TreeViewMainItemStyle"
        BasedOn="{StaticResource TreeViewItemStyle}"
        TargetType="{x:Type TreeViewItem}">
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Margin" Value="20,1" />
        <Setter Property="Padding" Value="10,5" />
    </Style>

    <!--#endregion-->

    <!--#region TreeView Sub Item Style-->

    <Style
        x:Key="TreeViewSubItemStyle"
        BasedOn="{StaticResource TreeViewItemStyle}"
        TargetType="{x:Type TreeViewItem}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Padding" Value="6,3" />
    </Style>

    <!--#endregion-->

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="22" />
    </Style>

</ResourceDictionary>