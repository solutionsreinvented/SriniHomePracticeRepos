<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shared="http://schemas.reinvented.com/shared">
    <!--#region ControlTemplates-->

    <!--#region ControlTemplate - TextBox-->

    <ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBox}">

        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">

            <Grid>

                <!--#region ScrollViewer-->

                <ScrollViewer
                    x:Name="PART_ContentHost"
                    Focusable="false"
                    HorizontalScrollBarVisibility="Hidden"
                    VerticalScrollBarVisibility="Hidden" />

                <!--#endregion-->

                <!--#region Place Holder Text-->

                <TextBlock
                    x:Name="placeHolder"
                    Padding="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="Center"
                    IsHitTestVisible="False"
                    Opacity="0.5"
                    Text="{TemplateBinding Tag}">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <!--#endregion-->

            </Grid>

        </Border>

        <!--#region ControlTemplate Triggers-->

        <ControlTemplate.Triggers>

            <!--#region Triggers-->

            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="Opacity" Value="0.4" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="Gray" />
            </Trigger>

            <Trigger Property="IsKeyboardFocused" Value="true">
                <!--<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />-->
            </Trigger>

            <!--#endregion-->

        </ControlTemplate.Triggers>

        <!--#endregion-->

    </ControlTemplate>

    <!--#endregion-->

    <!--#region ControlTemplate - TextBox Error Template-->

    <ControlTemplate x:Key="TextBoxErrorTemplate" TargetType="{x:Type TextBox}">

        <Grid>

            <Border
                Background="{TemplateBinding Background}"
                BorderBrush="IndianRed"
                BorderThickness="{TemplateBinding BorderThickness}">
                <ScrollViewer x:Name="PART_ContentHost" />
            </Border>

            <AdornedElementPlaceholder />

            <Grid.ToolTip>

                <ItemsControl
                    Height="Auto"
                    MaxWidth="400"
                    DataContext="{TemplateBinding Validation.Errors}"
                    ItemsSource="{Binding}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock Text="{Binding ErrorContent}" TextWrapping="Wrap" />
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </Grid.ToolTip>

        </Grid>

    </ControlTemplate>

    <!--#endregion-->

    <!--#endregion-->

    <!--#region Styles-->

    <!--#region Style - TextBox-->

    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">

        <Setter Property="shared:TextBoxProperties.SelectAll" Value="True" />

        <!--<Setter Property="Background" Value="{theme:ThemeResource ResourceKey=StaticBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=StaticBorderBrush}" />
        <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=StaticForegroundBrush}" />-->
        <Setter Property="Height" Value="26" />

        <Setter Property="Padding" Value="5,2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />

        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />

        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />

        <Setter Property="Template" Value="{DynamicResource TextBoxTemplate}" />

        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <AdornedElementPlaceholder />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Template" Value="{StaticResource TextBoxErrorTemplate}" />
            </Trigger>

            <MultiTrigger>

                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>

                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />

            </MultiTrigger>

        </Style.Triggers>

    </Style>

    <!--#endregion-->

    <!--#region Style - TextBox (Implicit)-->

    <Style BasedOn="{StaticResource TextBoxStyle}" TargetType="{x:Type TextBox}" />

    <!--#endregion-->

    <!--#endregion-->
</ResourceDictionary>